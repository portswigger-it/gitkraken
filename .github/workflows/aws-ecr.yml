name: Deploy to Amazon ECR

on:
  workflow_dispatch

env:
  AWS_REGION: eu-west-1

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download and unzip latest release
      run: |
        wget -q -O temp.zip https://release.gitkraken.com/enterprise/GitKrakenEnterpriseServer.zip
        unzip temp.zip
        rm temp.zip
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Load, tag, and push image to Amazon ECR
      id: load-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker load -i gk-enterprise-controller.tar
        docker load -i gk-kafka.tar
        #docker load -i gk-mongo.tar
        docker load -i gk-services.tar
        docker load -i gk-zookeeper.tar
        docker images
        docker tag gk-enterprise-controller:production $ECR_REGISTRY/gk-enterprise-controller:$IMAGE_TAG
        docker tag gk-kafka:production $ECR_REGISTRY/gk-kafka:$IMAGE_TAG
        docker tag gk-services:production $ECR_REGISTRY/gk-services:$IMAGE_TAG
        docker tag gk-zookeeper:production $ECR_REGISTRY/gk-zookeeper:$IMAGE_TAG
        docker push $ECR_REGISTRY/gk-enterprise-controller:$IMAGE_TAG
        docker push $ECR_REGISTRY/gk-kafka:$IMAGE_TAG
        docker push $ECR_REGISTRY/gk-services:$IMAGE_TAG
        docker push $ECR_REGISTRY/gk-zookeeper:$IMAGE_TAG
        echo "GitKraken server deployed to ECR with version number: $IMAGE_TAG"
